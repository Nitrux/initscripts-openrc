#!/sbin/openrc-run

description="Mount all filesystems."

# Define dependencies
depend() {
    need checkfs
    need checkroot-bootclean
    after checkfs
    after checkroot-bootclean
}

# Configuration variables with default values (can be set in /etc/conf.d/mountall)
: ${VERBOSE:=no}
: ${NOSWAP:=no}

start_pre() {
    # Set LANG from /etc/default/locale if available
    if [ -r /etc/default/locale ]; then
        . /etc/default/locale
        export LANG
    fi
}

start() {
    # Remove mountclean's flag files silently
    rm -f /tmp/.clean /run/.clean /run/lock/.clean
    rm -f /tmp/.tmpfs /run/.tmpfs /run/lock/.tmpfs

    # Remount /usr if it's already mounted (may have been read-only)
    if mountpoint -q /usr; then
        mount -o remount /usr || ewarn "Failed to remount /usr"
    fi

    # Mount all file systems with specific types and options
    mount -a -t nonfs,nfs4,smbfs,cifs,ncp,ncpfs,coda,ocfs2,gfs,gfs2,ceph -O no_netdev || ewarn "Failed to mount some file systems"

    # Create /var/log/fsck directory if it doesn't exist
    mkdir -p /var/log/fsck

    # Handle /run/initctl if sysvinit is installed
    INITCTL="/run/initctl"
    if [ ! -p "$INITCTL" ] && [ -f "/usr/share/sysvinit/update-rc.d" ]; then
        rm -f "$INITCTL"
        mknod -m 600 "$INITCTL" p || ewarn "Failed to create $INITCTL"
        PID="$(pidof -s /sbin/init || echo 1)"
        if [ -n "$PID" ] && [ "$PID" -ne 1 ]; then
            kill -s USR1 "$PID" || ewarn "Failed to send USR1 signal to init"
        fi
    fi

    # Activate swapfile swap, if any
    if [ "$NOSWAP" = yes ]; then
        [ "$VERBOSE" = no ] || ewarn "Not activating swap as requested via bootoption noswap."
    else
        if [ "$VERBOSE" = no ]; then
            swapon -a -e 2>/dev/null || :
        else
            swapon -a -e -v || ewarn "Failed to activate swapfile swap"
        fi
    fi

    # Remount tmpfs filesystems with updated VM settings
    mount_run mount_noupdate
    mount_lock mount_noupdate
    mount_shm mount_noupdate

    # Mount /tmp if required
    mount_tmp mount_noupdate
}

stop() {
    # No operation on stop
    return 0
}

status() {
    # Check if /var/log/fsck exists as an indicator of mountall's execution
    if [ -d /var/log/fsck ]; then
        return 0
    else
        return 1
    fi
}
